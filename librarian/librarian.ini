# This configuration file contains some defaults that should be modified to 
# suit your environment.

[librarian]
# WSGI server to use (use bjoern on *nix systems and gevent or cherrypy on 
# Windows for best results)
server = bjoern

# Port on which to listen
port = 80

# Address to bind to
bind = 0.0.0.0

# Whether to enable debug mode and reloader
debug = yes

# Whether extra logging will be output to STDOUT (slows the server down)
log = no

# Whether server should automatically reload on code update
reloader = no

# Location of the lock file
lockfile = /var/run/librarian.lock

[logging]
# This section deals with logging section. Most of the settings are related to 
# Python's logging module configuration. You may find documentation about 
# relevant options here:
# https://docs.python.org/2/library/logging.config.html

# Log format
format = [%%(asctime)s] %%(levelname)-8s %%(message)s

# Date and time formatting
date_format = %%Y-%%m-%%d %%H:%%M:%%S (%%z)

# Maximum size of the log file (bytes)
size = 10485760

# Number of backups to keep
backups = 4

# Output
output = /var/log/librarian.log

[database]
# Path to SQLite database file
path = /var/lib/outernet/archive.sqlite

[content]
# Path to content signature key (absolute path or relative package)
key = artexin.gpg.txt

# Path to gnupg keyrings
keyring = /var/lib/outernet/gnupg

# Path for temporary content storage
spooldir = /var/spool/downloads/content

# Path for file downloads
filedir = /var/spool/downloads/files

# Path for the apps directory
appdir = /var/spool/downloads/files/apps

# Path to content directory (where archive zipballs are stored)
contentdir = /srv/zipballs

# Path to cover images
covers = /srv/zipballs/.covers

# Extension of the signed content
extension = sig

# Extension of decrypted content
output_ext = zip

# Maximum days to keep undecrypted files 
#
# If the key is updated upstream, we need to allow some time for the receiver 
# to receive the updated public key. Meanwhile, we leave any undecrypted 
# content on storage. This setting should be adjusted according to the volume
# of content that comes down the dish, and software update dynamics.
keep = 14

# Name of the file that contains content metadata
metadata = info.json

[storage]
# Minimum space needed on storage at all times. Values can be specified without 
# a suffix, in which case it is treated as bytes, or with B, K, M, and G 
# suffixes (case-insensitive), for bytes, kilobytes, megabytes, and gigabytes, 
# respectively.
minfree = 0.5G

[profiling]
# Profiler log file
logfile = /var/lib/outernet/profile.log

# Profile output file (cachegrind format)
outfile = /var/lib/outernet/profile.out

[plugins]

# Show diskspace stats and offer interfaces for cleanup 
diskspace = yes

# Show license
license = yes

# Show Librarian logs
logs = yes

# Show link to TVHeadend
tvheadend = yes

# Control tuner using ONDD (disable TVHeadend when enabling this)
ondd = no

# Backup and rebuild content database
dbmanage = yes

[ondd]

# Location of the ONDD socket
socket = /var/run/ondd.ctrl

[dbmanage]

# Location where database backups are stored, relative to filedir
backups = database_backups

[dashboard]

# Order in which plugins should be rendered
plugins = diskspace,tvheadend,dbmanage,logs,license

